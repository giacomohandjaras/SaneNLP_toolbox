function wordvectors_out=SNLP_getWordVectors(words, vocabulary, wordvectors)
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%Given a set of words of interest (a cell N x 1), a large collection of words (a cell M x 1), a matrix representing word-embeddings
%%%%of all available words (M x D), the function returns the word-embeddings of the words of interest
%%%%for the words of interest
%%%%
%%%%Usage:
%%%%	wordvectors_out=SNLP_getWordVectors(words, vocabulary, wordvectors)
%%%%
%%%%	words: a cell N x 1, containing the words of interest
%%%%	vocabulary: all the available words (M x 1), describing the rows of the wordvectors matrix
%%%%	wordvectors: a numerical matrix (M x D), representing the weights generated by a NLP algorithm (e.g., word2vec)
%%%%
%%%%	wordvectors_out: the word-embeddings for the words of interest (N x D)
%%%%
%%%%
%%%%	Sane Natural Language Processing Toolkit, v0.01. https://github.com/giacomohandjaras/SaneNLP_toolbox
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

num_of_stim=numel(words);
columns=size(wordvectors,2);

wordvectors_out=nan(num_of_stim,columns);

for i=1:num_of_stim
    position=find(strcmp(vocabulary,words(i)));
    if numel(position)>0
        wordvectors_out(i,:)=wordvectors(position(1),:);
    end
end

end
